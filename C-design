# C-Curriculum-design
## The item consists of these points: 
### head:  display.h  parse.h  loadfonts.h
### main.c  display.c parse.c loadfonts.c


//main.c
#include <stdio.h>
#include "display.h"
#include "parse.h"
#include "loadfonts.h"



int main(int argc,char *argv[]){
    ///align,width,message
    int width;
    char align;
    char message[100];

    parse(argc,argv,&align,&width,message);
    loadfonts();
    display(align,width,message);

}



//display.h
void display(char align,int width,char message[]) ;

//display.c
#include "loadfonts.h"
#include <string.h>
#include <stdio.h>

void displayline(char *start,char *end ,char align ,int width);
char *split(char *start,int width);

void display(char align,int width,char message[]){
    char *s=message;
    char *e;
    while(*s !='\0'){
        e=split(s,width);
        displayline(s,e,align,width);
        s=e+1;

    }
}

void displayline(char *start,char *end ,char align ,int width){
    char buffer[5][300]={0};
    int i,j;
    char *p;
    int sp=0;
    for(i=0;i<5;i++){
        for (p=start;p<=end;p++){
            strcat(buffer[i],getfont(*p).img[i]);
        }
    }
    
    if (align=='c'){
        sp=(width-strlen(buffer[0]))/2;
    }else if (align =='r'){
        sp =width-strlen(buffer[0]);

    }
    for(i=0;i<5;i++){
        for(j=0;j<sp;j++){
            printf(" ");
        }
        printf("%s\n",buffer[i]);
    }
}
char *split(char *start,int width){
    char *p=start;
    int cur =0;
    struct font f;
    while(*p !='\0'){
        f = getfont(*p);
        if (f.width+cur<=width){
            cur +=f.width;
            p++;
        } else {
            break;

        }
    }
    return --p;
}


//parse.h
void parse(int argc,char *argv[],char *align,int *width,char message[]);

//parse.c
#include <stdlib.h>
#include <string.h>

void parse(int argc ,char *argv[],char *align,int *width,char message[]){
    int i;
	//char align= '1';
	//int width = 10;
    int start = 1;
    //char message[100]={0};
    message[0]='\0';
    for (i = 0;i<argc;i++){
        if (argv[i][0]=='-'){
            switch(argv[i][1]){
                case 'l':
                case 'r':
                case 'c':
                   *align = argv[i][1];
                   if (i+1>start)
                       start = i+1;
                   break;
                case 'w':
                   *width = atoi(argv[i+1]);
                   if(i+2>start)
                       start = i+2;
                   break;
            }
        }  
    }
    for (i=start ;i<argc-1;i++){
        strcat(message,argv[i]);
        strcat(message," ");
    }

    strcat(message,argv[i]);
}


//loadfonts.h
struct font{
    char img[5][50];
    int width;
    char c;

};
void loadfonts();
struct font getfont(char c);

//loadfonts.c
