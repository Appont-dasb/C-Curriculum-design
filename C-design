# C-Curriculum-design
## The item consists of these points: 
### head:  display.h  parse.h  loadfonts.h
### main.c  display.c parse.c loadfonts.c


//main.c
#include <stdio.h>
#include "display.h"
#include "parse.h"
#include "loadfonts.h"



int main(int argc,char *argv[]){
    ///align,width,message
    int width;
    char align;
    char message[100];

    parse(argc,argv,&align,&width,message);
    loadfonts();
    display(align,width,message);

}

//display.c
#include "loadfonts.h"
#include <string.h>
#include <stdio.h>

void displayline(char *start,char *end ,char align ,int width);
char *split(char *start,int width);

void display(char align,int width,char message[]){
    char *s=message;
    char *e;
    while(*s !='\0'){
        e=split(s,width);
        displayline(s,e,align,width);
        s=e+1;

    }
}

void displayline(char *start,char *end ,char align ,int width){
    char buffer[5][300]={0};
    int i,j;
    char *p;
    int sp=0;
    for(i=0;i<5;i++){
        for (p=start;p<=end;p++){
            strcat(buffer[i],getfont(*p).img[i]);
        }
    }
    
    if (align=='c'){
        sp=(width-strlen(buffer[0]))/2;
    }else if (align =='r'){
        sp =width-strlen(buffer[0]);

    }
    for(i=0;i<5;i++){
        for(j=0;j<sp;j++){
            printf(" ");
        }
        printf("%s\n",buffer[i]);
    }
}
char *split(char *start,int width){
    char *p=start;
    int cur =0;
    struct font f;
    while(*p !='\0'){
        f = getfont(*p);
        if (f.width+cur<=width){
            cur +=f.width;
            p++;
        } else {
            break;

        }
    }
    return --p;
}


//parse.c


