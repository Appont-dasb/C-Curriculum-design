
game.h

#define ROW 3
#define COL 3

#include<stdio.h>

#include<stdlib.h>

#include<time.h>
//声明
void Initboard(char board[ROW][COL], int row, int col);

void Displayboard(char board[ROW][COL], int row, int col);

void PlayerMove(char board[ROW][COL], int row, int col);

void ComputerMove(char board[ROW][COL], int row,int col);

char Is_Winner(char board[ROW][COL], int row, int col);
//四种结果：
//玩家胜利 - '*'
//电脑胜利 - '#'
//平局 - 'D'//draw平局
//继续 - 'C'



game.c
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"

//初始化定义
void Initboard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for(i=0 ; i<row ; i++)
	{
		for(j=0 ; j<col; j++)
		{
			board[i][j] = ' ';
		}
	}

}


//下面例子不具有普适性，只能用于打印3x3的格子
//打印定义
//void Displayboard(char board[ROW][COL], int row, int col)
//{
//	int i = 0;
//	for (i=0; i< row; i++)
//	{
//	//1.打印一行数据
//	printf(" %c | %c |%c \n",board[i][0],board[i][1],board[i][2]);
//	//2.打印分割行
//	if(i < row -1)
//	printf("---|---|---\n");
//	}
//}

//✨
void Displayboard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i=0; i< row; i++)
	{
		//1.打印一行数据
		for(j=0; j < col; j++)
		{
			printf(" %c ",board[i][j]);
			if(j < col-1)
			{
				printf("|");
			}
	    }
		printf("\n");

		//2.打印分割行
		if(i < row-1)
		{
			for(j = 0; j < col; j++)
			{
				printf("---");
				if(j < col-1)
				printf("|");
			}
			printf("\n");
		}
	}
}


test.c
#define _CRT_SECURE_NO_WARNINGS 1

#include"game.h"
void menu ()
{
	printf("*************************\n");
	printf("***** 1.play 0.exit *****\n");
	printf("*************************\n");
}
//游戏的整个算法实现
void game()
{
	//数组 - 存放走出的棋盘信息
	char board [ROW][COL] = {0};//全部空格
	//初始化
	Initboard(board, ROW, COL);
	//打印
	Displayboard(board, ROW, COL);

}

int main()
{
	int choice = 0;
	do
	{
	menu();
	printf("请选择:>\n");
	scanf("%d",&choice);

	switch(choice)
	{
	case 1:
		game();
		break;
	case 0:
		printf("退出程序\n");
		break;
	default:
		printf("输入错误，请重新输入\n");
		break;
	}
	}while(choice);

	return 0;
}
